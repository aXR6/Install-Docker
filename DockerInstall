#!/bin/bash

# Define cores
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # Sem Cor

# Função para exibir mensagens
message() {
    echo "..."
    echo "..."
    echo -e "${GREEN}$1${NC}"
    echo "..."
    echo "..."
    echo "=========================:=> TOOLX <=:========================="
}

# Verifica se o script está sendo executado como root
if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}Este script precisa ser executado como root.${NC}"
    exit 1
fi

remove_old_versions() {
    echo ">>>> Removendo versões anteriores"
    apt-get remove -y docker docker-engine docker.io containerd runc docker-ce docker-ce-cli containerd.io && message "OK"
}

update_system() {
    echo ">>>> Update"
    apt-get update && message "OK"
}

install_https_support() {
    echo ">>>> Instalando pacotes para permitir usar um repositório via HTTPS"
    apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common && message "OK"
}

add_docker_gpg_key() {
    echo ">>>> Adicionando chave GPG oficial do Docker"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && apt-key fingerprint 0EBFCD88 && message "OK"
}

add_docker_repo() {
    echo ">>>> Adicionando repositorio do Docker"
    echo "deb [arch=amd64] https://download.docker.com/linux/debian buster stable" > /etc/apt/sources.list.d/docker.list && message "Tá lá papai!! OK!"
}

install_docker() {
    echo ">>>> Instalando a versão mais recente do Docker CE e o containerd"
    apt-get install -y docker-ce docker-ce-cli containerd.io && message "OK"
}

enable_docker() {
    echo ">>> Ativando o Docker na inicialização do sistema"
    systemctl start docker && systemctl enable docker && message "OK"
}

test_docker() {
    echo ">>> Testando o Docker"
    docker run hello-world && message "OK"
}

# Executa as funções
remove_old_versions
update_system
install_https_support
add_docker_gpg_key
add_docker_repo
update_system
install_docker
enable_docker
test_docker
